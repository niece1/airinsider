<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use App\User;
use App\Role;
use App\Permission;
use Tests\Feature\FeatureTestCase;

class RoleTest extends FeatureTestCase
{
    use RefreshDatabase;
    
    /** @test */
    public function generating_admin_user_via_seeds_works_correctly()
    {
        $this->actingAs($this->create_admin_user());
        $this->assertCount(1, Role::all());
        $this->assertCount(1, User::all());
        $this->assertCount(32, Permission::all());        
    }
    
    /** @test */
    public function admin_user_can_see_add_post_button() 
    {
        $user = $this->create_admin_user();
        $response = $this->actingAs($user)->get('/dashboard/posts/');
        $response->assertStatus(200);
        $response->assertSee('Post List');
        $response->assertSee('Add Post');
    }
    
    /** @test */
    public function admin_user_can_see_add_role_button() 
    {
        $user = $this->create_admin_user();
        $response = $this->actingAs($user)->get('/dashboard/roles/');
        $response->assertStatus(200);
        $response->assertSee('Role List');
        $response->assertSee('Add Role');
    }
    
    /** @test */
    public function a_role_can_be_added_to_the_table_through_the_form()
    {
        $this->actingAs($this->create_admin_user());
        $response = $this->post('/dashboard/roles', [
            'title' => 'Moderator',
        ])->assertSessionHas('success_message')->assertStatus(302);
        $response->assertRedirect('/dashboard/roles');
        //because Admin role generated by default via seed
        $this->assertCount(2, Role::all());
    }
    
    /** @test */
    public function validation_title_is_at_least_two_characters() 
    {
        $this->actingAs($this->create_admin_user());
        $response = $this->post('/dashboard/roles', [
            'title' => 'A',
        ]);
        $response->assertSessionHasErrors('title');
        $messages = session('errors')->getMessages();
        $this->assertEquals($messages['title'][0], 'Поле должно быть мин 2 символа(ов).');
        //because Admin role generated by default via seed
        $this->assertCount(1, Role::all());
    }
    
    /** @test */
    public function validation_a_title_is_required() 
    {
        $this->actingAs($this->create_admin_user());
        $response = $this->post('/dashboard/roles', [
            'title' => '',
        ]);
        $response->assertSessionHasErrors('title');
        //because Admin role generated by default via seed
        $this->assertCount(1, Role::all());
    }
    
    /** @test */
    public function validation_a_title_should_be_max_30_characters() 
    {
        $this->actingAs($this->create_admin_user());
        $response = $this->post('/dashboard/roles', [
            'title' => 'Quaerat qui fuga minima sunt voluptatem id',
        ]);
        $response->assertSessionHasErrors('title');
        $messages = session('errors')->getMessages();
        $this->assertEquals($messages['title'][0], 'Поле не должно быть больше 30 символа(ов).');
        //because Admin role generated by default via seed
        $this->assertCount(1, Role::all());
    }
}
